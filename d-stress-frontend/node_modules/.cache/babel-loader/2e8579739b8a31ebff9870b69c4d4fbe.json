{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\d-stress-frontend\\\\src\\\\components\\\\insights-components\\\\charts\\\\barChart\\\\BarChart.js\";\n// generic bar chart component\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = props => /*#__PURE__*/_jsxDEV(Bar, {\n  data: {\n    labels: props.titles,\n    datasets: [{\n      label: 'Antcipated Stress Level',\n      backgroundColor: 'rgba(41, 156, 157)',\n      borderColor: 'black',\n      borderWidth: 1,\n      data: props.dataPack1\n    }, {\n      label: 'Actual Stress Level',\n      backgroundColor: 'rgba(97, 97, 97)',\n      borderColor: 'black',\n      borderWidth: 1,\n      data: props.dataPack2\n    }]\n  },\n  height: 300,\n  options: {\n    scales: {\n      xAxes: [{\n        stacked: true\n      }],\n      yAxes: [{\n        stacked: false,\n        ticks: {\n          min: 0,\n          max: 7\n        }\n      }]\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = BarChart;\nBarChart.propTypes = {\n  // generic bar chart component so takes in data and titles\n  titles: propTypes.arrayOf(propTypes.string).isRequired,\n  dataPack1: propTypes.arrayOf(propTypes.string).isRequired,\n  dataPack2: propTypes.arrayOf(propTypes.string).isRequired\n};\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/xampp/htdocs/projects/d-stress-frontend/src/components/insights-components/charts/barChart/BarChart.js"],"names":["React","propTypes","Bar","BarChart","props","labels","titles","datasets","label","backgroundColor","borderColor","borderWidth","data","dataPack1","dataPack2","scales","xAxes","stacked","yAxes","ticks","min","max","arrayOf","string","isRequired"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,iBACpB,QAAC,GAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAED,KAAK,CAACE,MADV;AAEJC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,yBADT;AAEEC,MAAAA,eAAe,EAAE,oBAFnB;AAGEC,MAAAA,WAAW,EAAE,OAHf;AAIEC,MAAAA,WAAW,EAAE,CAJf;AAKEC,MAAAA,IAAI,EAAER,KAAK,CAACS;AALd,KADQ,EAQR;AACEL,MAAAA,KAAK,EAAE,qBADT;AAEEC,MAAAA,eAAe,EAAE,kBAFnB;AAGEC,MAAAA,WAAW,EAAE,OAHf;AAIEC,MAAAA,WAAW,EAAE,CAJf;AAKEC,MAAAA,IAAI,EAAER,KAAK,CAACU;AALd,KARQ;AAFN,GADR;AAoBE,EAAA,MAAM,EAAE,GApBV;AAqBE,EAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,OAAO,EAAE;AADH,OAAD,CADD;AAINC,MAAAA,KAAK,EAAE,CAAC;AACND,QAAAA,OAAO,EAAE,KADH;AAENE,QAAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAE,CADA;AAELC,UAAAA,GAAG,EAAE;AAFA;AAFD,OAAD;AAJD;AADD;AArBX;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMlB,Q;AAuCNA,QAAQ,CAACF,SAAT,GAAqB;AAAE;AACrBK,EAAAA,MAAM,EAAEL,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCC,UADzB;AAEnBX,EAAAA,SAAS,EAAEZ,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCC,UAF5B;AAGnBV,EAAAA,SAAS,EAAEb,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCC;AAH5B,CAArB;AAMA,eAAerB,QAAf","sourcesContent":["// generic bar chart component\r\nimport React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst BarChart = props => (\r\n  <Bar\r\n    data={{\r\n      labels: props.titles,\r\n      datasets: [\r\n        {\r\n          label: 'Antcipated Stress Level',\r\n          backgroundColor: 'rgba(41, 156, 157)',\r\n          borderColor: 'black',\r\n          borderWidth: 1,\r\n          data: props.dataPack1\r\n        },\r\n        {\r\n          label: 'Actual Stress Level',\r\n          backgroundColor: 'rgba(97, 97, 97)',\r\n          borderColor: 'black',\r\n          borderWidth: 1,\r\n          data: props.dataPack2\r\n        },\r\n      ]\r\n    }}\r\n    height={300}\r\n    options={{\r\n      scales: {\r\n        xAxes: [{\r\n          stacked: true,\r\n        }],\r\n        yAxes: [{ \r\n          stacked: false,\r\n          ticks: {\r\n            min: 0,\r\n            max: 7    \r\n        }\r\n        }]\r\n      },\r\n    }}\r\n  />\r\n)\r\n\r\nBarChart.propTypes = { // generic bar chart component so takes in data and titles\r\n  titles: propTypes.arrayOf(propTypes.string).isRequired,\r\n  dataPack1: propTypes.arrayOf(propTypes.string).isRequired,\r\n  dataPack2: propTypes.arrayOf(propTypes.string).isRequired\r\n}\r\n\r\nexport default BarChart\r\n"]},"metadata":{},"sourceType":"module"}