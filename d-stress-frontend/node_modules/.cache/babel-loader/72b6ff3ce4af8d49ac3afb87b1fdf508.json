{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\d-stress-frontend\\\\src\\\\components\\\\inputs\\\\text-input\\\\TextInput.js\",\n    _s = $RefreshSig$();\n\n// component for text input\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TextInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextInput = props => {\n  _s();\n\n  const [focussed, setFocussed] = useState(false); // whether or not the text box is selected\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `field ${focussed && 'focussed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      type: \"text\",\n      value: props.value,\n      placeholder: props.label,\n      onChange: event => {\n        props.onChange(event.target.value);\n      }\n      /* pass value up component tree*/\n      ,\n      onFocus: () => setFocussed(true),\n      onBlur: () => setFocussed(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextInput, \"p35JLIAfc9UipAkzwouhvT83LAY=\");\n\n_c = TextInput;\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};\nTextInput.defaultProps = {\n  value: '',\n  label: '',\n  onChange: () => ''\n};\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["C:/xampp/htdocs/projects/d-stress-frontend/src/components/inputs/text-input/TextInput.js"],"names":["React","useState","PropTypes","TextInput","props","focussed","setFocussed","id","value","label","event","onChange","target","propTypes","string","isRequired","func","defaultProps"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC,CADyB,CACuB;;AAEhD,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQI,QAAQ,IAAI,UAAW,EAAhD;AAAA,4BACE;AACE,MAAA,EAAE,EAAED,KAAK,CAACG,EADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACK,KAJrB;AAKE,MAAA,QAAQ,EAAEC,KAAK,IAAI;AAACN,QAAAA,KAAK,CAACO,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaJ,KAA5B;AAAmC;AAAC;AAL1D;AAME,MAAA,OAAO,EAAE,MAAMF,WAAW,CAAC,IAAD,CAN5B;AAOE,MAAA,MAAM,EAAE,MAAMA,WAAW,CAAC,KAAD;AAP3B;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAO,MAAA,OAAO,EAAEF,KAAK,CAACG,EAAtB;AAAA,gBACGH,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;GAAMN,S;;KAAAA,S;AAqBNA,SAAS,CAACU,SAAV,GAAsB;AAClBN,EAAAA,EAAE,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UADH;AAElBP,EAAAA,KAAK,EAAEN,SAAS,CAACY,MAFC;AAGlBL,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAHC;AAIlBH,EAAAA,QAAQ,EAAET,SAAS,CAACc;AAJF,CAAtB;AAOAb,SAAS,CAACc,YAAV,GAAyB;AACrBT,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,KAAK,EAAE,EAFc;AAGrBE,EAAAA,QAAQ,EAAE,MAAM;AAHK,CAAzB;AAMA,eAAeR,SAAf","sourcesContent":["// component for text input\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './TextInput.css'\r\n\r\nconst TextInput = props => {\r\n  const [focussed, setFocussed] = useState(false) // whether or not the text box is selected\r\n\r\n  return (\r\n    <div className={`field ${focussed && 'focussed'}`}>\r\n      <input\r\n        id={props.id}\r\n        type=\"text\"\r\n        value={props.value}\r\n        placeholder={props.label}\r\n        onChange={event => {props.onChange(event.target.value)} /* pass value up component tree*/}\r\n        onFocus={() => setFocussed(true)}\r\n        onBlur={() => setFocussed(false)}\r\n      />\r\n      <label htmlFor={props.id}>\r\n        {props.label}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInput.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nTextInput.defaultProps = {\r\n    value: '',\r\n    label: '',\r\n    onChange: () => '',\r\n}\r\n\r\nexport default TextInput\r\n"]},"metadata":{},"sourceType":"module"}