{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\dissertation\\\\d-stress-frontend\\\\src\\\\components\\\\insights-components\\\\charts\\\\lineChart\\\\LineChart.js\";\n// generic component for line graph\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = props => /*#__PURE__*/_jsxDEV(Line, {\n  data: {\n    labels: props.dates,\n    datasets: [{\n      label: 'Actual SL',\n      data: props.dataPack1,\n      fill: true,\n      backgroundColor: 'rgba(41, 156, 157, 0.7)',\n      borderColor: 'black'\n    }, {\n      label: 'Anticipated SL',\n      data: props.dataPack2,\n      fill: true,\n      backgroundColor: 'rgba(97, 97, 97, 0.7)',\n      borderColor: 'black'\n    }]\n  },\n  height: 300,\n  options: {\n    spanGaps: true,\n    scales: {\n      xAxes: [{\n        ticks: {\n          maxTicksLimit: 5\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          min: 0,\n          max: 7\n        }\n      }]\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = LineChart;\nLineChart.propTypes = {\n  // generic line chart component so takes in data and titles\n  dates: propTypes.arrayOf(propTypes.string).isRequired,\n  dataPack1: propTypes.arrayOf(propTypes.string).isRequired,\n  dataPack2: propTypes.arrayOf(propTypes.string).isRequired\n};\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/xampp/htdocs/projects/dissertation/d-stress-frontend/src/components/insights-components/charts/lineChart/LineChart.js"],"names":["React","propTypes","Line","LineChart","props","labels","dates","datasets","label","data","dataPack1","fill","backgroundColor","borderColor","dataPack2","spanGaps","scales","xAxes","ticks","maxTicksLimit","yAxes","min","max","arrayOf","string","isRequired"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,iBACrB,QAAC,IAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAED,KAAK,CAACE,KADV;AAEJC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,IAAI,EAAEL,KAAK,CAACM,SAFd;AAGEC,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,eAAe,EAAE,yBAJnB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADQ,EAQR;AACEL,MAAAA,KAAK,EAAE,gBADT;AAEEC,MAAAA,IAAI,EAAEL,KAAK,CAACU,SAFd;AAGEH,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,eAAe,EAAE,uBAJnB;AAKEC,MAAAA,WAAW,EAAE;AALf,KARQ;AAFN,GADR;AAoBE,EAAA,MAAM,EAAE,GApBV;AAqBE,EAAA,OAAO,EAAE;AACPE,IAAAA,QAAQ,EAAE,IADH;AAEPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,aAAa,EAAE;AADV;AADD,OAAD,CADD;AAMNC,MAAAA,KAAK,EAAE,CAAC;AACNF,QAAAA,KAAK,EAAE;AACLG,UAAAA,GAAG,EAAE,CADA;AAELC,UAAAA,GAAG,EAAE;AAFA;AADD,OAAD;AAND;AAFD;AArBX;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMnB,S;AAyCNA,SAAS,CAACF,SAAV,GAAsB;AAAE;AACtBK,EAAAA,KAAK,EAAEL,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UADvB;AAEpBf,EAAAA,SAAS,EAAET,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UAF3B;AAGpBX,EAAAA,SAAS,EAAEb,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC;AAH3B,CAAtB;AAMA,eAAetB,SAAf","sourcesContent":["// generic component for line graph\r\nimport React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst LineChart = props => (\r\n  <Line\r\n    data={{\r\n      labels: props.dates,\r\n      datasets: [\r\n        {\r\n          label: 'Actual SL',\r\n          data: props.dataPack1,\r\n          fill: true,\r\n          backgroundColor: 'rgba(41, 156, 157, 0.7)',\r\n          borderColor: 'black'\r\n        },\r\n        {\r\n          label: 'Anticipated SL',\r\n          data: props.dataPack2,\r\n          fill: true,\r\n          backgroundColor: 'rgba(97, 97, 97, 0.7)',\r\n          borderColor: 'black'\r\n        }\r\n      ]\r\n    }}\r\n    height={300}\r\n    options={{\r\n      spanGaps: true,\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            maxTicksLimit: 5\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            min: 0,\r\n            max: 7    \r\n          }\r\n        }]\r\n      },\r\n    }}\r\n  />\r\n)\r\n\r\nLineChart.propTypes = { // generic line chart component so takes in data and titles\r\n  dates: propTypes.arrayOf(propTypes.string).isRequired,\r\n  dataPack1: propTypes.arrayOf(propTypes.string).isRequired,\r\n  dataPack2: propTypes.arrayOf(propTypes.string).isRequired\r\n}\r\n\r\nexport default LineChart\r\n"]},"metadata":{},"sourceType":"module"}