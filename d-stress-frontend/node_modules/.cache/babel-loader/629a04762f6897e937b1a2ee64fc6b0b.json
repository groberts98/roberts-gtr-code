{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\dstress\\\\src\\\\pages\\\\home\\\\Home.js\",\n    _s = $RefreshSig$();\n\n// home page\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../../components/navbar/Navbar';\nimport Stressor from '../../components/stressor-components/stressor/Stressor.js';\nimport InsightsButton from '../../components/buttons/insightsButton/InsightsButton';\nimport NoStressors from '../../components/stressor-components/no-stressors/NoStressors';\nimport StressorTile from '../../components/stressor-components/stressor-tile/StressorTile';\nimport AddStressorButton from '../../components/buttons/addStressorButton/AddStressorButton';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState('');\n  const [currentTile, setCurrentTile] = useState(''); // whether or not the home screen tile has been clicked\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`https://dstress-backend.herokuapp.com/api/stressor/GetStressor.php?id=&filter=current`);\n\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n\n        setData(await response.json());\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentTile //if the current tiles been clicked, show the stressor page\n    ?\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(Stressor, {\n        stressor: data.filter(obj => obj.id === currentTile),\n        goBack: () => setCurrentTile('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [data && data.length ? data.map((stressor, index) => /*#__PURE__*/_jsxDEV(StressorTile, {\n        className: 'stressorTileHome',\n        id: stressor['id'],\n        title: stressor['title'],\n        date: stressor['date'],\n        description: stressor['description'],\n        copingPlan: stressor['coping-plan'],\n        anticipatedSL: stressor['anticipated-SL'],\n        actualSL: stressor['actual-SL'],\n        uncertainty: stressor['uncertainty'],\n        uncontrollability: stressor['uncontrollability'],\n        onClick: id => setCurrentTile(id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(NoStressors, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/insights\",\n        children: /*#__PURE__*/_jsxDEV(InsightsButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-stressor\",\n        children: /*#__PURE__*/_jsxDEV(AddStressorButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"a9RSTLGgMhTCd0eqlcyOj8tLj6Y=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/xampp/htdocs/projects/dstress/src/pages/home/Home.js"],"names":["React","useState","useEffect","Link","Navbar","Stressor","InsightsButton","NoStressors","StressorTile","AddStressorButton","Home","data","setData","currentTile","setCurrentTile","fetchData","response","fetch","ok","Error","statusText","json","error","console","log","filter","obj","id","length","map","stressor","index"],"mappings":"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","sourcesContent":["// home page\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport Stressor from '../../components/stressor-components/stressor/Stressor.js'\r\nimport InsightsButton from '../../components/buttons/insightsButton/InsightsButton'\r\nimport NoStressors from '../../components/stressor-components/no-stressors/NoStressors'\r\nimport StressorTile from '../../components/stressor-components/stressor-tile/StressorTile'\r\nimport AddStressorButton from '../../components/buttons/addStressorButton/AddStressorButton'\r\n\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState('')\r\n  const [currentTile, setCurrentTile] = useState('') // whether or not the home screen tile has been clicked\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(`https://dstress-backend.herokuapp.com/api/stressor/GetStressor.php?id=&filter=current`)\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        setData(await response.json())\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {currentTile //if the current tiles been clicked, show the stressor page\r\n        ? <div className='page-container'>\r\n            <Stressor\r\n              stressor={data.filter(obj => (obj.id === currentTile))}\r\n              goBack={() => setCurrentTile('')}\r\n            /> \r\n          </div>\r\n        : <div className='page-container'>\r\n            {(data && data.length) ? \r\n              data.map((stressor, index) => (\r\n                <StressorTile key={index}\r\n                  className={'stressorTileHome'}\r\n                  id={stressor['id']}\r\n                  title={stressor['title']}\r\n                  date={stressor['date']}\r\n                  description={stressor['description']}\r\n                  copingPlan={stressor['coping-plan']}\r\n                  anticipatedSL={stressor['anticipated-SL']}\r\n                  actualSL={stressor['actual-SL']}\r\n                  uncertainty={stressor['uncertainty']}\r\n                  uncontrollability={stressor['uncontrollability']}\r\n                  onClick={id => setCurrentTile(id)}\r\n                />\r\n              )) :\r\n              <NoStressors />\r\n            }\r\n            <Link to='/insights'><InsightsButton/></Link>\r\n            <Link to='/add-stressor'><AddStressorButton/></Link>\r\n          </div>\r\n      }\r\n      <Navbar />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}